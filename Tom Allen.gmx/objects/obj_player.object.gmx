<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tom_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_tom_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the player object

// Physics Variables
pSpd = 7; //max speed
pAccel = 5; //acceleration and friction coefficient
hspd = 0; //current horizontal speed
vspd = 0; //current vertical speed
grav = 1.5; //gravity

// Player Stats Variables
hp = 14; //Current hit points
maxhp = 16; //Maximum hit points
pJumpHeight = -20; //max jump height
pDblJump = -15; //Double Jump Height

// Buff Variables
portraitversion = 1; //Buffed or Unbuffed portrait
bufftime = 360; //360
buffduration = 360; //360
pJumpBuff = -5; //jump height buff
pSpdBuff = 5; //max speed buff
pHPBuff = 20; //Max HP buff

//Initialize player state
state = states.active;
buffState = buffStates.normal;

//Initialize cutscene variables
stage = 0;

// Create the audio emitter
audio_em = audio_emitter_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Timer for attack animation
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control the player's state
//if(global.dialogueDone) {

//get_input();

// Execute the state
//script_execute(state);
//}

switch (state)
{
    case states.active: scr_player_active(); break;
    case states.attacking: scr_player_attack(obj_sledge); break;
    case states.cutscene: scr_player_cutscene(); break;
    case states.damage: scr_player_damaged(); break;
}

switch (buffState)
{  
    case buffStates.grog: scr_player_grog(); break;
    case buffStates.groggrog: scr_player_groggrog(); break;
}

if (hp &lt;= 0) game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyParent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collide with an enemy
var above_enemy = y &lt; other.y+vspd;
var falling = vspd &gt; 0;

if (above_enemy &amp;&amp; falling) {
    if (!place_meeting(x, yprevious, obj_solid)) {
        y=yprevious;
    }
    
    while(!place_meeting(x, y+1, other)) {
        y++;
    }

    // Kill the enemy
    with (other) {
        //instance_destroy();
    }
    
    // Bounce off the enemy
    vspd = -(16/1.5);
    
    // Play the sound
    //audio_play_sound(snd_step, 6, false);
} else {
    // Take damage
    scr_take_damage();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
