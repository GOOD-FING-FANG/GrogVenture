<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Run the dialogue for the test room

if(global.cutscene_status[0] == false)
{
    //Set the player to the cutscene state
    obj_player.state = states.cutscene;
    obj_player.sprite_index = spr_tom_idle;
    
    //Initialize the dialogue complete and cutscene complete flags
    dialogue_complete = false;
    cutscene_complete = false;
    
    //Initialize the counter for dialogue
    count = 0;
    
    //Initialize the text speed
    spd = 1;
    
    //Initialize an array for the dialogue in the cutscene
    dialogue[0,0] = "GROG!!";
    dialogue[0,1] = obj_player;
    dialogue[0,2] = spr_tom_portrait;
    dialogue[1,0] = "Hego hygo, neighborezee!";
    dialogue[1,1] = obj_woodrow;
    dialogue[1,2] = spr_woodrow_portrait;
    dialogue[2,0] = "\*sigh\*#Hey Woodrow";
    dialogue[2,1] = obj_player;
    dialogue[2,2] = spr_tom_portrait;
    dialogue[3,0] = "Having a problem there?#I heard some grogs?";
    dialogue[3,1] = obj_woodrow;
    dialogue[3,2] = spr_woodrow_portrait;
    dialogue[4,0] = "I’m trying to cut down on#my lawn mowing time,#but I just can’t find a#way to get more power#out of this thing.";
    dialogue[4,1] = obj_player;
    dialogue[4,2] = spr_tom_portrait;
    dialogue[5,0] = "Hmm, do you think you#might already have#enough power?";
    dialogue[5,1] = obj_woodrow;
    dialogue[5,2] = spr_woodrow_portrait;
    dialogue[6,0] = "Already have enough#power?!? Woodrow, I#can never accept that.";
    dialogue[6,1] = obj_player;
    dialogue[6,2] = spr_tom_portrait;
    dialogue[7,0] = "Why don’t you come over#to my house, I want to#show you something that#might help.";
    dialogue[7,1] = obj_woodrow;
    dialogue[7,2] = spr_woodrow_portrait;
}
else
{
    instance_destroy();
}
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Run through dialouge and cutscene animation

//Read input from user to advance text
get_input();

//Initial box creation 
if(!dialogue_complete &amp;&amp; count == 0)
{
    //Wait for user to press (space) then open the first text box
    if(space)
    {       
        scr_text(dialogue[count,0],dialogue[count,1],dialogue[count,2],spd);
        count++;
    }
}

else if(instance_exists(obj_text))
{
    //Wait for previous text box to complete before drawing next one
    if(obj_text.done)
    {
        if(space)
        {
            //Destroy previous text box and draw next one
            with (obj_text) instance_destroy();
            
            //Check to confirm there is another text box to draw    
            if(array_height_2d(dialogue) &gt; count)
            {
                scr_text(dialogue[count,0],dialogue[count,1],dialogue[count,2],spd);
                count++;
            }
            //If no more text boxes, flag dialogue as complete
            else if(array_height_2d(dialogue) == count)
            {                   
                dialogue_complete = true;                
            }
        }
    }
}

//Begin moving sprites when dialogue completes
if(dialogue_complete)
{
    //Check stage of the player
    if(obj_player.stage == 0)
    {
        //Move player to the fence in room
        if(obj_player.x &lt; 544)
        {
            //Set the sprite animation and image speed
            if(obj_player.sprite_index != spr_tom_walk)
            {
                obj_player.image_index = 0;
                obj_player.sprite_index = spr_tom_walk;
                obj_player.image_speed = 0.6;
            }
            //Set the player movement speed
            obj_player.x += 5;
        }
        //If top statement fails, player must be over 544, and next stage starts
        else
        {
            //Begin to jump over fence
            obj_player.stage = 1;
            obj_player.vspd = -15;
            obj_player.x += 5;
            
        }
    }
    else if(obj_player.stage == 1)
    {
        //Track player in air and apply gravity
        if(!place_meeting(obj_player.x, obj_player.y+obj_player.vspd, obj_solid))
        {
            //Apply gravity
            obj_player.vspd += 1.5;
            
            //Set the sprite for jumping
            obj_player.sprite_index = spr_tom_jump;
            obj_player.image_speed = 0;
            obj_player.image_index = obj_player.vspd &gt; 0;
                
            //Continue moving to the right
            obj_player.x += 5;
        }
        
        //Check to see when the player has landed, and set to stage 2 if so
        //Player has vspeed == 0 at top of jump, so also check for vertical position
        if(obj_player.vspeed == 0 &amp;&amp; obj_player.y &gt; 700)
        {
            obj_player.stage = 2;
        }
    }
    else if(obj_player.stage == 2)
    {
        //Set the sprite animation and image speed
        if(obj_player.sprite_index != spr_tom_walk)
        {
            obj_player.image_index = 0;
            obj_player.sprite_index = spr_tom_walk;
            obj_player.image_speed = 0.6;
        }
        
        //Set the player movement speed if they have not reached the door
        if(obj_player.x &lt; 1056)
        {
            obj_player.x += 5;
        }
        else
        {
            obj_player.stage = 3;
        }
    }
    
    //Move NPC to door
    if(obj_woodrow.stage == 0)
    {
        if(obj_woodrow.x &lt; 1056)
        {
            obj_woodrow.x += 4;
        }
        else
        {
            obj_woodrow.stage = 1;
        }
    }
    
    //Flag cutscene as complete if both sprites have reached their final stage
    if(obj_woodrow.stage == 1 &amp;&amp; obj_player.stage == 3)
    {
        cutscene_complete = true;
    }
}

//When cutscene finishes, reset stages and place player back into active state, advance to next room
if(cutscene_complete)
{
    obj_player.stage = 0;
    obj_woodrow.stage = 0;
    
    obj_player.state = states.active;
    
    global.cutscene_status[0] = true;
    obj_player.x = 1184;
    obj_player.y = 704;
    room_goto(rm_stage1_1);
    
}

with(obj_player) move(obj_solid);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
